import { Injectable } from '@nestjs/common';

@Injectable()
export class LangChainService {
  processText(input: string): string {
    const lowerCasedInput = input.toLowerCase();

    let response = '–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –∑–Ω–∞—é —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏ üò¢';

    if (lowerCasedInput.includes('–ø—Ä–∏–≤—ñ—Ç')) {
      response = '–ü—Ä–∏–≤—ñ—Ç, —è —Ç—É—Ç —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ';
    } else if (
      (lowerCasedInput.includes('—á–∞—Å') || lowerCasedInput.includes('–≥–æ–¥–∏–Ω–∞')) &&
      lowerCasedInput.includes('–Ω–∞') &&
      lowerCasedInput.includes('–∑–µ–º–ª—ñ')
    ) {
      response = `–ù–∞ –∑–µ–º–ª—ñ –∑–∞—Ä–∞–∑ ${new Date().toTimeString().split(' ')[0]}`;
    }

    return response;
  }
}
